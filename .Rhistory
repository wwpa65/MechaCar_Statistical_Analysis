if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("SummarizedExperiment")
browseVignettes("SummarizedExperiment")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Biobase")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("MWASTools")
library("Biobase")
library(convert)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("convert")
library(convert)
as(object, "ExpressionSet")
dataDirectory <- system.file("extdata", package="Biobase")
dataDirectory
exprsFile <- file.path(dataDirectory, "exprsData.txt")
exprs <- as.matrix(read.table(exprsFile, header=TRUE, sep="\t",
+                               row.names=1,
+                               as.is=TRUE))
exprs <- as.matrix(read.table(exprsFile, header=TRUE, sep="\t", Â row.names=1, as.is=TRUE))
exprsFile
exprs <- as.matrix(read.table(exprsFile, header=TRUE, sep="\t", row.names=1, as.is=TRUE))
exprs
class(exprs)
dim(exprs)
colnames(exprs)
head(exprs[,1:5])
minimalSet <- ExpressionSet(assayData=exprs)
pDataFile <- file.path(dataDirectory, "pData.txt")
pData <- read.table(pDataFile,
row.names=1, header=TRUE, sep="\t")
dim(pData)
rownames(pData)
summary(pData)
all(rownames(pData)==colnames(exprs))
names(pData)
sapply(pData, class)
pData[c(15, 20), c("gender", "type")]
pData[pData$score>0.8,]
metadata <- data.frame(labelDescription=
c("Patient gender",
"Case/control status",
"Tumor progress on XYZ scale"),
row.names=c("gender", "type", "score"))
phenoData <- new("AnnotatedDataFrame",
data=pData, varMetadata=metadata)
phenoData
head(pData(phenoData))
phenoData[c("A","Z"),"gender"]
pData(phenoData[phenoData$score>0.8,])
annotation <- "hgu95av2"
experimentData <- new("MIAME",
+ name="Pierre Fermat",
+ lab="Francis Galton Lab",
+ contact="pfermat@lab.not.exist",
+ title="Smoking-Cancer Experiment",
+ abstract="An example ExpressionSet",
+ url="www.lab.not.exist",
+ other=list(
+ notes="Created from text files"
+   ))
experimentData <- new("MIAME",
+ name="Pierre Fermat",
+ lab="Francis Galton Lab",
+ contact="pfermat@lab.not.exist",
+ title="Smoking-Cancer Experiment",
+ abstract="An example ExpressionSet",
+ url="www.lab.not.exist",
+ other=list(
+ notes="Created from text files"))
experimentData <- new("MIAME",
name="Pierre Fermat",
lab="Francis Galton Lab",
contact="pfermat@lab.not.exist",
title="Smoking-Cancer Experiment",
abstract="An example ExpressionSet",
url="www.lab.not.exist",
other=list(
notes="Created from text files"))
exampleSet <- ExpressionSet(assayData=exprs,
phenoData=phenoData,
experimentData=experimentData,
annotation="hgu95av2")
minimalSet <- ExpressionSet(assayData=exprs)
help("ExpressionSet-class")
exampleSet
exampleSet$gender[1:5]
exampleSet$gender[1:5] == "Female"
featureNames(exampleSet)[1:5]
sampleNames(exampleSet)[1:5]
varLabels(exampleSet)
mat <- exprs(exampleSet)
dim(mat)
vv <- exampleSet[1:5, 1:3]
dim(vv)
featureNames(vv)
sampleNames(vv)
males <- exampleSet[ , exampleSet$gender == "Male"]
males
# Import Suspension_Coil.csv file
Suspension_Coil <- read.csv(file="Suspension_Coil.csv")
#total_summary <- summarize(Suspension_Coil, mean(PSI), median(PSI), var(PSI), sd(PSI))
lot <- group_by(Suspension_Coil, Manufacturing_Lot)
total_summary <- summarize(lot, mean(PSI), median(PSI), var(PSI), sd(PSI))
library(dplyr)
# Import Suspension_Coil.csv file
Suspension_Coil <- read.csv(file="Suspension_Coil.csv")
#total_summary <- summarize(Suspension_Coil, mean(PSI), median(PSI), var(PSI), sd(PSI))
lot <- group_by(Suspension_Coil, Manufacturing_Lot)
total_summary <- summarize(lot, mean(PSI), median(PSI), var(PSI), sd(PSI))
Suspension_Coil <- read.csv(file="Suspension_Coil.csv")
setwd("~/Documents/DataScience/UNC/MechaCar_Statistical_Analysis")
# Import Suspension_Coil.csv file
Suspension_Coil <- read.csv(file="Suspension_Coil.csv")
#total_summary <- summarize(Suspension_Coil, mean(PSI), median(PSI), var(PSI), sd(PSI))
lot <- group_by(Suspension_Coil, Manufacturing_Lot)
total_summary <- summarize(lot, mean(PSI), median(PSI), var(PSI), sd(PSI))
total_summary
# Import Suspension_Coil.csv file
Suspension_Coil <- read.csv(file="Suspension_Coil.csv")
#total_summary <- summarize(Suspension_Coil, mean(PSI), median(PSI), var(PSI), sd(PSI))
lot <- group_by(Suspension_Coil, Manufacturing_Lot)
total_summary <- summarize(lot, Mean=mean(PSI), median(PSI), var(PSI), sd(PSI))
total_summary
# Import Suspension_Coil.csv file
Suspension_Coil <- read.csv(file="Suspension_Coil.csv")
#total_summary <- summarize(Suspension_Coil, mean(PSI), median(PSI), var(PSI), sd(PSI))
lot <- group_by(Suspension_Coil, Manufacturing_Lot)
total_summary <- summarize(lot, Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
total_summary
?t.test
t.test(lot, mu=1500.00)
t.test(lot['PSI'], mu=1500.00)
t.test(Suspension_Coil['PSI'], mu=1500.00)
lot1 <- subset(Suspension_Coil, Manufacturing_lot == "Lot1")
Suspension_Coil
lot1 <- subset(Suspension_Coil, Manufacturing_Lot == "Lot1")
lot2 <- subset(Suspension_Coil, Manufacturing_Lot == "Lot2")
lot3 <- subset(Suspension_Coil, Manufacturing_Lot == "Lot3")
t.test(lot1['PSI"], mu=1500)
t.test(lot1["PSI"], mu=1500)
t.test(lot2["PSI"], mu=1500)
t.test(lot3["PSI"], mu=1500)
t.test(subset(Suspension_Coil, Manufacturing_Lot == "Lot1")["PSI"], mu=1500)
t.test(subset(Suspension_Coil, Manufacturing_Lot == "Lot3")["PSI"], mu=1500)
